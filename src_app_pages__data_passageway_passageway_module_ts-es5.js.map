{"version":3,"mappings":"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","names":["FiltroComponent","fb","_angular_core__WEBPACK_IMPORTED_MODULE_1__","Date","moment__WEBPACK_IMPORTED_MODULE_0___default","add","toDate","createForm","form","group","inicio","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","lastMonth","today","filtar","emit","value","field","valid","get","selectors","inputs","loaded","outputs","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_3__","FisVsSefazComponent","service","getFiiVsFazChart","subscribe","data","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","loadData","routes","path","component","_passageway_component__WEBPACK_IMPORTED_MODULE_0__","PassagewayRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","PassagewayComponent","_angular_core__WEBPACK_IMPORTED_MODULE_4__","PassagewayModule","_passageway_service__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","_angular_common__WEBPACK_IMPORTED_MODULE_11__","_nebular_theme__WEBPACK_IMPORTED_MODULE_12__","_passageway_routing_module__WEBPACK_IMPORTED_MODULE_3__","_component_custom_charts_module__WEBPACK_IMPORTED_MODULE_0__","_nebular_moment__WEBPACK_IMPORTED_MODULE_13__","_nebular_date_fns__WEBPACK_IMPORTED_MODULE_14__","format","declarations","_passageway_component__WEBPACK_IMPORTED_MODULE_4__","_fis_vs_sefaz_fis_vs_sefaz_component__WEBPACK_IMPORTED_MODULE_2__","_quantidade_contribuiente_quantidade_contribuiente_component__WEBPACK_IMPORTED_MODULE_7__","_quantidade_blacklist_quantidade_blacklist_component__WEBPACK_IMPORTED_MODULE_6__","_quantidade_passagem_quantidade_passagem_component__WEBPACK_IMPORTED_MODULE_8__","_filtro_filtro_component__WEBPACK_IMPORTED_MODULE_1__","PassagemwayService","http","_environments_environment__WEBPACK_IMPORTED_MODULE_0__","t","post","getUrl","filtro","parameter","prepareFiltro","inicioFormatado","moment__WEBPACK_IMPORTED_MODULE_1___default","finalFormatado","_angular_core__WEBPACK_IMPORTED_MODULE_2__","factory","QuantidadeBlacklistComponent","getQuantidadeBlacklist","QuantidadeContribuientesComponent","getConstribuinteCadastrados","QuantidadePassagemComponent","getQuantidadePassagem"],"sources":["webpack:///src/app/pages/_data/passageway/filtro/filtro.component.ts","webpack:///src/app/pages/_data/passageway/filtro/filtro.component.html","webpack:///src/app/pages/_data/passageway/fis-vs-sefaz/fis-vs-sefaz.component.html","webpack:///src/app/pages/_data/passageway/fis-vs-sefaz/fis-vs-sefaz.component.ts","webpack:///src/app/pages/_data/passageway/passageway-routing.module.ts","webpack:///src/app/pages/_data/passageway/passageway.component.ts","webpack:///src/app/pages/_data/passageway/passageway.component.html","webpack:///src/app/pages/_data/passageway/passageway.module.ts","webpack:///src/app/pages/_data/passageway/passageway.service.ts","webpack:///src/app/pages/_data/passageway/quantidade-blacklist/quantidade-blacklist.component.html","webpack:///src/app/pages/_data/passageway/quantidade-blacklist/quantidade-blacklist.component.ts","webpack:///src/app/pages/_data/passageway/quantidade-contribuiente/quantidade-contribuiente.component.html","webpack:///src/app/pages/_data/passageway/quantidade-contribuiente/quantidade-contribuiente.component.ts","webpack:///src/app/pages/_data/passageway/quantidade-passagem/quantidade-passagem.component.html","webpack:///src/app/pages/_data/passageway/quantidade-passagem/quantidade-passagem.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'filtro',\r\n  templateUrl: './filtro.component.html',\r\n})\r\nexport class FiltroComponent  {\r\n\r\n  @Input()\r\n  public loaded = false;\r\n\r\n  @Output()\r\n  public filtar = new EventEmitter()\r\n\r\n  public form: FormGroup;\r\n\r\n  private today = new Date();\r\n  private lastMonth = moment(new Date()).add(-1, 'months').toDate() \r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    ){\r\n    this.createForm();\r\n  }\r\n\r\n  public createForm() {\r\n    this.form = this.fb.group({\r\n      inicio: new FormControl(this.lastMonth),\r\n      final: new FormControl(this.today),\r\n    });\r\n  }\r\n  \r\n\r\n  public onSubmit(){\r\n    this.filtar.emit(this.form.value);\r\n  }\r\n  public getStatus(field: any): string {\r\n\r\n     if (field.valid) {\r\n       return 'success';\r\n     }\r\n\r\n     return 'danger';\r\n  }\r\n\r\n  public get inicio() {\r\n    return this.form.get('inicio');\r\n  }\r\n\r\n  public get final() {\r\n    return this.form.get('final');\r\n  }\r\n}\r\n","<nb-accordion>\r\n  <nb-accordion-item>\r\n    <nb-accordion-item-header>\r\n      Filtros\r\n    </nb-accordion-item-header>\r\n    <nb-accordion-item-body  [nbSpinner]=\"!loaded\">\r\n    \r\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"needs-validation\" novalidate >\r\n        \r\n        <div class=\"row\">\r\n          <div class=\"col-xl-6 col-12 form-group\">\r\n            <input \r\n                nbInput \r\n                fullWidth \r\n                class=\"form-control\"\r\n                placeholder=\"Inicio\" \r\n                [nbDatepicker]=\"inicioPicker\"\r\n                [formControl]=\"inicio\" \r\n                >\r\n              <nb-datepicker #inicioPicker>\r\n              </nb-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-xl-6 col-12 form-group\">\r\n            <input \r\n              nbInput \r\n              fullWidth \r\n              class=\"form-control\"\r\n              placeholder=\"Final\" \r\n              [nbDatepicker]=\"finalPicker\"\r\n              [formControl]=\"final\" \r\n              >\r\n            <nb-datepicker #finalPicker>\r\n            </nb-datepicker>\r\n          </div>\r\n\r\n          <div class=\"offset-xl-9 col-xl-3 offset-md-8 col-md-4 col-12 form-group\">\r\n            <button class=\"control-button form-control\" fullWidth nbButton type=\"submit\" >\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </nb-accordion-item-body>\r\n  </nb-accordion-item>\r\n</nb-accordion>","<nb-card>\r\n\r\n  <nb-card-header class=\"text-center\">\r\n    Quantidade de DFE's na SEFAZ-GO X ingeridos no FIS\r\n  </nb-card-header>\r\n\r\n  <nb-card-body >\r\n    <nb-accordion>\r\n      <nb-accordion-item>\r\n        <nb-accordion-item-header>\r\n          Filtros\r\n        </nb-accordion-item-header>\r\n        <nb-accordion-item-body  [nbSpinner]=\"!loaded\">\r\n        \r\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"needs-validation\" novalidate >\r\n            \r\n            <div class=\"row\">\r\n              <div class=\"col-xl-6 col-12 form-group\">\r\n                <input \r\n                    nbInput \r\n                    fullWidth \r\n                    class=\"form-control\"\r\n                    placeholder=\"Inicio\" \r\n                    [nbDatepicker]=\"inicioPicker\"\r\n                    [formControl]=\"inicio\" \r\n                    >\r\n                  <nb-datepicker #inicioPicker>\r\n                  </nb-datepicker>\r\n              </div>\r\n\r\n              <div class=\"col-xl-6 col-12 form-group\">\r\n                <input \r\n                  nbInput \r\n                  fullWidth \r\n                  class=\"form-control\"\r\n                  placeholder=\"Final\" \r\n                  [nbDatepicker]=\"finalPicker\"\r\n                  [formControl]=\"final\" \r\n                  >\r\n                <nb-datepicker #finalPicker>\r\n                </nb-datepicker>\r\n              </div>\r\n\r\n              <div class=\"offset-xl-9 col-xl-3 offset-md-8 col-md-4 col-12 form-group\">\r\n                <button class=\"control-button form-control\" fullWidth nbButton type=\"submit\" >\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n        </nb-accordion-item-body>\r\n      </nb-accordion-item>\r\n      </nb-accordion>\r\n  </nb-card-body>\r\n\r\n  <nb-card-body>\r\n    <custom-bar-chart [data]=\"data\" *ngIf=\"loaded\">\r\n    </custom-bar-chart>\r\n  </nb-card-body>\r\n\r\n</nb-card>","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport moment from 'moment';\r\nimport { PassagemwayService } from '../passageway.service';\r\n\r\n@Component({\r\n  selector: 'fis-vs-sefaz',\r\n  styleUrls: ['./fis-vs-sefaz.component.scss'],\r\n  templateUrl: './fis-vs-sefaz.component.html',\r\n})\r\nexport class FisVsSefazComponent  {\r\n\r\n  public data: any;\r\n  public loaded = false;\r\n  public form: FormGroup;\r\n\r\n  private today = new Date();\r\n  private lastMonth =  moment(new Date()).add(-1, 'months').toDate() \r\n\r\n  constructor(\r\n    public service: PassagemwayService,\r\n    public fb: FormBuilder,\r\n    ){\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.service.getFiiVsFazChart().subscribe(\r\n      data => {\r\n        this.data = data;\r\n        this.loaded = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  public createForm() {\r\n    this.form = this.fb.group({\r\n      inicio: new FormControl(this.lastMonth),\r\n      final: new FormControl(this.today),\r\n    });\r\n  }\r\n  \r\n  onSubmit(): void {\r\n    this.loadData();\r\n  }\r\n  \r\n  public loadData(){\r\n    this.loaded = false;\r\n    this.service.getFiiVsFazChart({inicio: this.inicio.value, final: this.final.value}).subscribe(\r\n      data => {\r\n        this.data = data;\r\n        this.loaded = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  public getStatus(field: any): string {\r\n\r\n     if (field.valid) {\r\n       return 'success';\r\n     }\r\n\r\n     return 'danger';\r\n  }\r\n\r\n  public get inicio() {\r\n    return this.form.get('inicio');\r\n  }\r\n\r\n  public get final() {\r\n    return this.form.get('final');\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PassagewayComponent } from './passageway.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: PassagewayComponent,\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PassagewayRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-passageway',\r\n  styleUrls: ['./passageway.component.scss'],\r\n  templateUrl: './passageway.component.html',\r\n})\r\nexport class PassagewayComponent  {\r\n\r\n}\r\n","<div class=\"row\">\r\n\r\n    <div class=\"col-12 col-xl-8 pb-3\">\r\n      <fis-vs-sefaz>\r\n      </fis-vs-sefaz>\r\n    </div>\r\n    \r\n    <div class=\"col-12 col-xl-4\">\r\n      <quantidade-contribuiente>\r\n      </quantidade-contribuiente>\r\n    </div>\r\n\r\n</div>\r\n\r\n<hr/>\r\n\r\n<div class=\"row\">\r\n\r\n  <div class=\"col-md-6 col-12\">\r\n    <quantidade-passagem>\r\n    </quantidade-passagem>\r\n  </div>\r\n\r\n  <div class=\"col-md-6 col-12\">\r\n      <quantidade-blacklist>\r\n      </quantidade-blacklist>  \r\n  </div>\r\n\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NbDateFnsDateModule } from '@nebular/date-fns';\r\nimport { NbMomentDateModule } from '@nebular/moment';\r\nimport { NbAccordionModule, NbButton, NbButtonModule, NbCardModule, NbDatepickerModule, NbInputModule, NbSpinnerComponent, NbSpinnerModule } from '@nebular/theme';\r\nimport { CustomChartsModule } from '../../_component/custom-charts.module';\r\nimport { FiltroComponent } from './filtro/filtro.component';\r\nimport { FisVsSefazComponent } from './fis-vs-sefaz/fis-vs-sefaz.component';\r\nimport { PassagewayRoutingModule } from './passageway-routing.module';\r\nimport { PassagewayComponent } from './passageway.component';\r\nimport { PassagemwayService } from './passageway.service';\r\nimport { QuantidadeBlacklistComponent } from './quantidade-blacklist/quantidade-blacklist.component';\r\nimport { QuantidadeContribuientesComponent } from './quantidade-contribuiente/quantidade-contribuiente.component';\r\nimport { QuantidadePassagemComponent } from './quantidade-passagem/quantidade-passagem.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    NbCardModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    ReactiveFormsModule,\r\n    NbSpinnerModule,\r\n    PassagewayRoutingModule,\r\n    CustomChartsModule,\r\n    NbAccordionModule,\r\n    NbDatepickerModule,\r\n    NbMomentDateModule,\r\n    NbDateFnsDateModule.forChild({format: 'dd MM yyyy'}),\r\n    NbSpinnerModule,\r\n  ],\r\n  declarations: [\r\n    PassagewayComponent,\r\n    FisVsSefazComponent,\r\n    QuantidadeContribuientesComponent,\r\n    QuantidadeBlacklistComponent,\r\n    QuantidadePassagemComponent,\r\n    FiltroComponent,\r\n  ],\r\n  providers: [\r\n    PassagemwayService,\r\n  ],\r\n})\r\nexport class PassagewayModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport moment from 'moment';\r\n\r\n@Injectable()\r\nexport class PassagemwayService {\r\n\r\n\r\n  getUrl(): string {\r\n    return `${environment.baseUrl}`;\r\n  }\r\n\r\n  constructor(public http: HttpClient) {\r\n\r\n  }\r\n\r\n  save(t: any): Observable<any> {\r\n    return this.http.post<any>(`${this.getUrl()}/create`, t);\r\n  }\r\n\r\n  getFiiVsFazChart(filtro?: any): Observable<any[]> {\r\n    const parameter = this.prepareFiltro(filtro);\r\n    return this.http.get<any[]>(`${this.getUrl()}/fii-vs-sefaz/${parameter.inicio}/${parameter.final}`);\r\n  }\r\n  \r\n  getConstribuinteCadastrados(filtro?: any): Observable<any[]> {\r\n    const parameter = this.prepareFiltro(filtro);\r\n    return this.http.get<any[]>(`${environment.graficos.constribuinteCadastrados}/${parameter.inicio}/${parameter.final}`);\r\n  }\r\n\r\n  getQuantidadeBlacklist(filtro?: any): Observable<any[]> {\r\n    const parameter = this.prepareFiltro(filtro);\r\n    return this.http.get<any[]>(`${environment.graficos.blacklist}/${parameter.inicio}/${parameter.final}`);\r\n  }\r\n  \r\n  getQuantidadePassagem(filtro?: any): Observable<any[]> {\r\n    const parameter = this.prepareFiltro(filtro);\r\n    return this.http.get<any[]>(`${environment.graficos.registroPassagem}/${parameter?.inicio}/${parameter?.final}`);\r\n  }\r\n\r\n  private prepareFiltro(filtro: any){\r\n    \r\n    if(!filtro){\r\n      filtro = {};\r\n      filtro.inicioFormatado = moment(new Date());\r\n      filtro.finalFormatado = moment(new Date()).add(-3, 'months');\r\n    } \r\n    \r\n    const inicioFormatado = moment(filtro?.inicio).format(environment.format.data)\r\n    const finalFormatado = moment(filtro?.finalFormatado).format(environment.format.data)\r\n\r\n    return {inicio: inicioFormatado, final: finalFormatado };\r\n  }\r\n}\r\n","\r\n<nb-card >\r\n  <nb-card-header class=\"text-center\">Quantidade Registros na Blacklist</nb-card-header>\r\n  \r\n  <nb-card-body>\r\n    <nb-accordion>\r\n      <nb-accordion-item>\r\n        <nb-accordion-item-header>\r\n          Filtros \r\n        </nb-accordion-item-header>\r\n        <nb-accordion-item-body [nbSpinner]=\"!loaded\">\r\n          \r\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"needs-validation\" novalidate >\r\n            \r\n            <div class=\"full-name-inputs\">\r\n              <input \r\n                nbInput \r\n                fullWidth \r\n                placeholder=\"Inicio\" \r\n                [nbDatepicker]=\"inicioPicker\"\r\n                [formControl]=\"inicio\"  \r\n                >\r\n              <nb-datepicker #inicioPicker>\r\n              </nb-datepicker>\r\n            \r\n              <input \r\n                nbInput \r\n                fullWidth \r\n                placeholder=\"final\" \r\n                [nbDatepicker]=\"finalPicker\"\r\n                [formControl]=\"final\"  \r\n                >\r\n              <nb-datepicker #finalPicker >\r\n              </nb-datepicker>\r\n              \r\n              <button class=\"control-button\" nbButton type=\"submit\">\r\n                Buscar\r\n              </button>\r\n            </div>\r\n          </form>\r\n          \r\n        </nb-accordion-item-body>\r\n      </nb-accordion-item>\r\n    </nb-accordion>\r\n  </nb-card-body>\r\n  \r\n  <nb-card-body>\r\n    <ng-container *ngIf=\"loaded\">\r\n      <bar-echart [data]=\"data\">\r\n      </bar-echart>\r\n    </ng-container>\r\n  </nb-card-body>\r\n  \r\n</nb-card>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport moment from 'moment';\r\nimport { PassagemwayService } from '../passageway.service';\r\n\r\n@Component({\r\n  selector: 'quantidade-blacklist',\r\n  styleUrls: ['./quantidade-blacklist.component.scss'],\r\n  templateUrl: './quantidade-blacklist.component.html',\r\n})\r\nexport class QuantidadeBlacklistComponent implements OnInit {\r\n\r\n  private lastMonth =  moment(new Date()).add(-1, 'months').toDate() \r\n  \r\n  public data: any;\r\n  public filtro: any;\r\n  public loaded: boolean = false;\r\n\r\n  public form: FormGroup;\r\n\r\n  constructor(\r\n    public service: PassagemwayService,\r\n    public fb: FormBuilder,\r\n    ){\r\n    this.createForm();\r\n    this.loadData();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public createForm() {\r\n    this.form = this.fb.group({\r\n      inicio: new FormControl(this.lastMonth),\r\n      final: new FormControl(new Date()),\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.loadData();\r\n  }\r\n  \r\n  public loadData(){\r\n    this.loaded = false;\r\n    this.service.getQuantidadeBlacklist({inicio: this.inicio.value, final: this.final.value}).subscribe(\r\n      data => {\r\n        this.data = data;\r\n        this.loaded = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  public getStatus(field: any): string {\r\n\r\n     if (field.valid) {\r\n       return 'success';\r\n     }\r\n\r\n     return 'danger';\r\n  }\r\n\r\n  public get inicio() {\r\n    return this.form.get('inicio');\r\n  }\r\n\r\n  public get final() {\r\n    return this.form.get('final');\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n\r\n  <nb-card-header class=\"text-center\">\r\n    Quantidade de Contribuintes Cadastrados\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <nb-accordion>\r\n      <nb-accordion-item>\r\n        <nb-accordion-item-header>\r\n          Filtros\r\n        </nb-accordion-item-header>\r\n        <nb-accordion-item-body  [nbSpinner]=\"!loaded\">\r\n        \r\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"needs-validation\" novalidate >\r\n            \r\n            <div class=\"row\">\r\n              <div class=\"col-xl-6 col-md-6 col-12 form-group\">\r\n                <input \r\n                  nbInput \r\n                  fullWidth \r\n                  placeholder=\"Inicio\" \r\n                  [nbDatepicker]=\"inicioPicker\"\r\n                  [formControl]=\"inicio\" \r\n                  >\r\n                <nb-datepicker #inicioPicker>\r\n                </nb-datepicker>\r\n              </div>\r\n\r\n              <div class=\"col-xl-6 col-md-6 col-12 form-group\">\r\n                <input \r\n                  nbInput \r\n                  fullWidth \r\n                  placeholder=\"Final\" \r\n                  [nbDatepicker]=\"finalPicker\"\r\n                  [formControl]=\"final\" \r\n                  >\r\n                <nb-datepicker #finalPicker>\r\n                </nb-datepicker>\r\n              </div>\r\n\r\n              <div class=\"col-xl-6 offset-xl-6 offset-md-4 col-md-8 col-12 form-group\">\r\n                <button class=\"control-button\" fullWidth nbButton type=\"submit\">\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </nb-accordion-item-body>\r\n      </nb-accordion-item>\r\n      </nb-accordion>\r\n  </nb-card-body>\r\n\r\n  <nb-card-body>\r\n    <custom-pie-chart *ngIf=\"loaded\"></custom-pie-chart>\r\n  </nb-card-body>\r\n\r\n</nb-card>","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport moment from 'moment';\r\nimport { PassagemwayService } from '../passageway.service';\r\n\r\n@Component({\r\n  selector: 'quantidade-contribuiente',\r\n  styleUrls: ['./quantidade-contribuiente.component.scss'],\r\n  templateUrl: './quantidade-contribuiente.component.html',\r\n})\r\nexport class QuantidadeContribuientesComponent  {\r\n  private lastMonth =  moment(new Date()).add(-1, 'months').toDate() \r\n  public data: any;\r\n  public loaded = false;\r\n  public form: FormGroup;\r\n\r\n  constructor(\r\n    public service: PassagemwayService,\r\n    public fb: FormBuilder,\r\n    ){\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.service.getFiiVsFazChart().subscribe(\r\n      data => {\r\n        this.data = data;\r\n        this.loaded = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  public createForm() {\r\n    this.form = this.fb.group({\r\n      inicio: new FormControl(this.lastMonth),\r\n      final: new FormControl(new Date()),\r\n    });\r\n  }\r\n  \r\n  onSubmit(): void {\r\n    this.loadData();\r\n  }\r\n  \r\n  public loadData(){\r\n    this.loaded = false;\r\n    this.service.getConstribuinteCadastrados({inicio: this.inicio.value, final: this.final.value}).subscribe(\r\n      data => {\r\n        this.data = data;\r\n        this.loaded = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  public getStatus(field: any): string {\r\n\r\n     if (field.valid) {\r\n       return 'success';\r\n     }\r\n\r\n     return 'danger';\r\n  }\r\n\r\n  public get inicio() {\r\n    return this.form.get('inicio');\r\n  }\r\n\r\n  public get final() {\r\n    return this.form.get('final');\r\n  }\r\n\r\n}\r\n","\r\n<nb-card >\r\n  <nb-card-header class=\"text-center\">Quantidade Registros de Passagem</nb-card-header>\r\n  \r\n  <nb-card-body>\r\n    <nb-accordion>\r\n      <nb-accordion-item>\r\n        <nb-accordion-item-header>\r\n          Filtros \r\n        </nb-accordion-item-header>\r\n        <nb-accordion-item-body [nbSpinner]=\"!loaded\">\r\n          \r\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"needs-validation\" novalidate >\r\n            \r\n            <div class=\"full-name-inputs\">\r\n              <input \r\n                nbInput \r\n                fullWidth \r\n                placeholder=\"Inicio\" \r\n                [nbDatepicker]=\"inicioPicker\"\r\n                [formControl]=\"inicio\"  \r\n                >\r\n              <nb-datepicker #inicioPicker>\r\n              </nb-datepicker>\r\n            \r\n              <input \r\n                nbInput \r\n                fullWidth \r\n                placeholder=\"final\" \r\n                [nbDatepicker]=\"finalPicker\"\r\n                [formControl]=\"final\"  \r\n                >\r\n              <nb-datepicker #finalPicker >\r\n              </nb-datepicker>\r\n              \r\n              <button class=\"control-button\" nbButton type=\"submit\">\r\n                Buscar\r\n              </button>\r\n            </div>\r\n          </form>\r\n          \r\n        </nb-accordion-item-body>\r\n      </nb-accordion-item>\r\n    </nb-accordion>\r\n  </nb-card-body>\r\n  \r\n  <nb-card-body>\r\n    <ng-container *ngIf=\"loaded\">\r\n      <bar-echart [data]=\"data\">\r\n      </bar-echart>\r\n    </ng-container>\r\n  </nb-card-body>\r\n  \r\n</nb-card>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport moment from 'moment';\r\nimport { PassagemwayService } from '../passageway.service';\r\n\r\n@Component({\r\n  selector: 'quantidade-passagem',\r\n  styleUrls: ['./quantidade-passagem.component.scss'],\r\n  templateUrl: './quantidade-passagem.component.html',\r\n})\r\nexport class QuantidadePassagemComponent implements OnInit  {\r\n  private lastMonth =  moment(new Date()).add(-1, 'months').toDate() \r\n  public data: any;\r\n  public filtro: any;\r\n  public loaded: boolean = false;\r\n\r\n  public form: FormGroup;\r\n\r\n  constructor(\r\n    public service: PassagemwayService,\r\n    public fb: FormBuilder,\r\n    ){\r\n    this.createForm();\r\n    this.loadData();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public createForm() {\r\n    this.form = this.fb.group({\r\n      inicio: new FormControl(new Date()),\r\n      final: new FormControl(this.lastMonth),\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.loadData();\r\n  }\r\n  \r\n  public loadData(){\r\n    this.loaded = false;\r\n    this.service.getQuantidadePassagem({inicio: this.inicio.value, final: this.final.value}).subscribe(\r\n      data => {\r\n        this.data = data;\r\n        this.loaded = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  public getStatus(field: any): string {\r\n\r\n     if (field.valid) {\r\n       return 'success';\r\n     }\r\n\r\n     return 'danger';\r\n  }\r\n\r\n  public get inicio() {\r\n    return this.form.get('inicio');\r\n  }\r\n\r\n  public get final() {\r\n    return this.form.get('final');\r\n  }\r\n\r\n}\r\n"]}